<?php
/**
 * Implements hook_node_presave().
 */
function devel_generate_extras_node_presave($node) {
  return devel_generate_extras_modify_dummy_content('node', $node);
}

/**
 * Implements hook_user_insert().
 */
function devel_generate_extras_user_insert(&$edit, $account, $category) {
  // hook_user_insert() allows us to modify extra user fields,
  // but not account information such as the user picture.
  return devel_generate_extras_modify_dummy_content('user', $account);
}

/**
 * Implements hook_user_presave().
 */
function devel_generate_extras_user_presave(&$edit, $account, $category) {
  // hook_user_presave() allows us to modify what's in $edit,
  // for example the user picture, but not fields.
  $modified = (object)$edit;
  $modified = devel_generate_extras_modify_dummy_content('user', $object);
  $edit = (array)$modified;
}

/**
 * All-purpose function to modify a different entities
 */
function devel_generate_extras_modify_dummy_content($bundle, $info) {
  $object = DevelGenerateExtrasHandlers::Create($bundle, $object);
  if ($object->IsDummy()) {
    $object->Populate();
  }
  return $object->GetInfo();
}

/**
 * Implements hook_devel_generate_extras_class().
 */
function devel_generate_extras_devel_generate_extras_class($bundle, $object) {
  return array(
    new DevelGenerateExtrasEntity($bundle, $object),
    new DevelGenerateExtrasHookInvoker($bundle, $object),
  );
}

/**
 * Implements hook_devel_generate_extras_dummy().
 */
function devel_generate_extras_devel_generate_extras_dummy($bundle, $object) {
  $return = FALSE;
  switch ($bundle) {
    case 'node':
      if (isset($object->devel_generate)) {
        return TRUE;
      }
      break;
    case 'user':
      // devel_generate puts .invalid at the end of the generated user's
      // email address. This module should not be activated on a production
      // site, or else anyone can put ".invalid" at the end of their email
      // address and their profile's content will be overridden.
      $suffix = '.invalid';
      if (drupal_substr($object->mail, strlen($object->mail) - strlen($suffix)) == $suffix) {
        return TRUE;
      }
      break;
    default:
      break;
  }
  return $return;
}
